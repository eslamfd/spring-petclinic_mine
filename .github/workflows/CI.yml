name: Build and Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
#    services:
#      sonarqube:
#        image: sonarqube:community
#        ports:
#          - 9000:9000
#        options: >-
#          --health-cmd="curl -f http://localhost:9000/api/system/health || exit 1"
#          --health-interval=10s
#          --health-timeout=5s
#          --health-retries=20

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run tests
        run: mvn test

      # SonarQube Part
# --- using sonar cloud
#      - name: Analyze with SonarCloud

        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarcloud-github-action@v2.2.0
#        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
# --- using local host
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=petclinic_git -Dsonar.projectName='petclinic_git'
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=eslamfd_spring-petclinic_mine
        run: mvn -B verify org.sonarsource.scanner.maven:sonar \
          -Dsonar.projectKey=eslamfd_spring-petclinic_mine \
          -Dsonar.organization=eslamfd \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ env.SONAR_TOKEN }}
